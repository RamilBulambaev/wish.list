#name: linting, testing, building
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#jobs:
#  pipeline:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [ 17.x ]
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Staring Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: install modules
#        run: npm ci --force
#      - name: build production project
#        run: npm run build:prod
#        if: always()
#      - name: linting typescript
#        run: npm run lint:ts
#        if: always()
#      - name: linting css
#        run: npm run lint:scss
#      - name: unit testing
#        if: always()
#        run: npm run test:unit
#      - name: build storybook
#        run: npm run storybook:build
#        if: always()
#      - name: screenshot testing
#        run: npm run test:ui:ci
#        if: always()

name: linting, testing, building

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci --force

      - name: Build production project
        run: npm run build:prod
        if: always()

      - name: Build Storybook
        run: npm run storybook:build
        if: always()

      - name: Screenshot testing (Loki)
        run: npm run test:ui:ci
        if: always()

      - name: Generate UI Test Report
        run: npm run test:ui:report
        if: always()

      - name: Upload UI Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: loki-report
          path: .loki

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v2
        if: always()

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        if: always()
        with:
          path: '.loki'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        if: always()

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci --force

      - name: Lint TypeScript
        run: npm run lint:ts
        if: always()

      - name: Lint SCSS
        run: npm run lint:scss
        if: always()

      - name: Unit Testing
        run: npm run test:unit
        if: always()